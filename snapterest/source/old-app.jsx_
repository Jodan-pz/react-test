var React = require('react');
var ReactDOM = require('react-dom');
var ReactDOMServer = require('react-dom/server');

/*
var reactElement = React.createElement('h1', { className:'header' }, 'This is a test');
ReactDOM.render( reactElement, document.getElementById('react-application'));
*/

/*
var h1 = React.createElement('h1', { className: 'header', key: 'header' }, 'This is React');
var p = React.createElement('p', { className: 'content', key: 'content' }, "And that's how it works.");
var reactFragment = [ h1, p ];
var section = React.createElement('section', { className: 'container' }, reactFragment);
ReactDOM.render(section, document.getElementById('react-application'));
*/

/*var createListItemElement = React.createFactory('li');

var listItemElement1 = createListItemElement({ className: 'item-1', key: 'item-1' }, 'Item 1');
var listItemElement2 = createListItemElement({ className: 'item-2', key: 'item-2' }, 'Item 2');
var listItemElement3 = createListItemElement({ className: 'item-3', key: 'item-3' }, 'Item 3');
var listItemElement4 = React.DOM.li({ className: 'item-4', key: 'item-4' }, 'Item 4');
var listItemElement5 = React.DOM.li({ className: 'item-5', key: 'item-5' }, 'Item 5');
var listItemElement6 = React.DOM.li({ className: 'item-6', key: 'item-6' }, 'Item 6');
var listItemElement7 = React.DOM.li({ className: 'item-7', key: 'item-7' }, 'Item 7');

var reactFragment = [listItemElement1, listItemElement2, listItemElement3, listItemElement4, listItemElement5, listItemElement6, listItemElement7];
var listOfItems = React.createElement('ul', { className: 'list-of-items' }, reactFragment);

ReactDOM.render(listOfItems, document.getElementById('react-application'));

console.log("Static Markup: " + ReactDOMServer.renderToStaticMarkup(listOfItems));
console.log("React String: " + ReactDOMServer.renderToString(listOfItems));*/

/*var listOfItems = <ul className='list-of-items'>
                    <li className='item-1'>Item 1</li>
                    <li className='item-2'>Item 2</li>
                    <li className='item-3'>Item 3</li>
                  </ul>;
ReactDOM.render(listOfItems, document.getElementById('react-application'));*/

/*var ReactClass = React.createClass({
  
  
  render: function () {
    if ( this.props.isHidden ){
        return null;
    }
    var header = this.props.tweets.length + ' Latest Tweets';
    
    return React.createElement('h1', { className: 'header' }, header );
  }
});

var reactComponentElement = React.createElement(ReactClass, { isHidden:false, tweets: ['a','b','c'] } );

ReactDOM.render(reactComponentElement, document.getElementById('react-application'));*/

var ReactClass = React.createClass( 
{
  getInitialState: function () {
    return {
      isHeaderHidden: false
    };
  },

  handleClick : function() {
      this.setState({
          isHeaderHidden: !this.state.isHeaderHidden
      });
  },
  
  render: function (){ 
    var title =  'This is a stateful component!';
    var headerElement = React.createElement('h1', { className: 'header', key: 'header' }, title);
    var buttonElement = React.createElement('button', { className: 'btn btn-default', onClick: this.handleClick, key: 'button' }, 'Toggle header');
    if (this.state.isHeaderHidden) {
      return React.createElement('div', null, [ buttonElement ]);
    }
    return React.createElement('div', null, [ buttonElement, headerElement ]); 
  }
});
var reactComponentElement = React.createElement(ReactClass);

ReactDOM.render(reactComponentElement, document.getElementById('react-application'));
